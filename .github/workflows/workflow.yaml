# name: Terraform and Helm Workflow
# on:
#   workflow_dispatch:
#   push:
#     branches:
#       - main
# env:
#   DESTROY: 'true' # Change it to falsedestroy infra

# jobs:
#   # Job 1: Apply and Destroy Terraform
#   terraform:
#     name: Apply and Destroy Terraform
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3
        
#       - name: Set up AWS CLI
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}
          
#       - name: Set up Terraform
#         uses: hashicorp/setup-terraform@v3
#         with:
#           terraform_version: "1.9.5"
          
#       - name: Terraform Init
#         run: terraform init -reconfigure
#         working-directory: terraform
        
#       - name: Apply Terraform
#         if:  ${{ env.DESTROY == 'false'}}
#         run: |
#           echo "Running Terraform apply..."
#           terraform apply --var-file=var.tfvars --auto-approve || { 
#             echo "First attempt failed, retrying...";
#             terraform apply --var-file=var.tfvars --auto-approve;
#           }
#         working-directory: terraform
        
#       - name: Destroy Terraform
#         if: ${{ env.DESTROY == 'true' }}
#         run: |
#           echo "Running Terraform destroy..."
#           terraform destroy --var-file=var.tfvars --auto-approve || {
#             echo "First attempt failed, retrying...";
#             terraform destroy --var-file=var.tfvars --auto-approve;
#           }
#         working-directory: terraform


#   # Job 2: Install Redis Helm Chart on eks-cluster-1a
#   eks-cluster-1a:
#     name: Install Redis Helm Chart on eks-cluster-1a
#     runs-on: ubuntu-latest
#     if: ${{ env.DESTROY == 'false'}}
#     needs: terraform  # Depends on Job 1 completion
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3
        
#       - name: Set up AWS CLI
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}
          
#       - name: Set up Helm
#         uses: azure/setup-helm@v4.2.0

#       - name: Configure kubectl for eks-cluster-1a
#         run: |
#           aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name eks-cluster-1a
#         env:
#           AWS_REGION: ${{ secrets.AWS_REGION }}
      
#       - name: Helm Install or Upgrade Redis on eks-cluster-1a
#         run: |
#           if helm ls -n redis-cluster | grep redis-cluster-a; then
#             echo "Release found. Upgrading..."
#             helm upgrade --timeout 600s redis-cluster-a ./charts -f ./charts/values_a.yaml -n redis-cluster --set global.redis.password=${{ secrets.REDIS_PASSWORD }}
#           else
#             echo "Release not found. Installing..."
#             helm install redis-cluster-a ./charts -f ./charts/values_a.yaml -n redis-cluster --create-namespace --set global.redis.password=${{ secrets.REDIS_PASSWORD }}
#           fi
#         env:
#           REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}

#   # Job 3: Install Redis Helm Chart on eks-cluster-1b
#   eks-cluster-1b:
#     name: Install Redis Helm Chart on eks-cluster-1b
#     runs-on: ubuntu-latest
#     if: ${{ env.DESTROY == 'false'}}
#     needs: terraform  # Depends on Job 1 completion
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3
        
#       - name: Set up AWS CLI
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}
          
#       - name: Set up Helm
#         uses: azure/setup-helm@v4.2.0

#       - name: Configure kubectl for eks-cluster-1b
#         run: |
#           aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name eks-cluster-1b
#         env:
#           AWS_REGION: ${{ secrets.AWS_REGION }}
      
#       - name: Helm Install or Upgrade Redis on eks-cluster-1b
#         run: |
#           if helm ls -n redis-cluster | grep redis-cluster-b; then
#             echo "Release found. Upgrading..."
#             helm upgrade --timeout 600s redis-cluster-b ./charts -f ./charts/values_b.yaml -n redis-cluster --set global.redis.password=${{ secrets.REDIS_PASSWORD }}
#           else
#             echo "Release not found. Installing..."
#             helm install redis-cluster-b ./charts -f ./charts/values_b.yaml -n redis-cluster --create-namespace --set global.redis.password=${{ secrets.REDIS_PASSWORD }}
#           fi
#         env:
#           REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}


